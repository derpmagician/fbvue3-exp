import{H as p,r as y,y as h,z as g,A as r,K as w,I as v,J as d,L as i,M as f,N as m,q as P,T as B,E as b,P as D}from"./index-b3cf4afc.js";const M=p("blogposts",()=>{let s=y([]),a=y(!1);return{documents:s,loadingDoc:a,getAllBlogPosts:async()=>{a.value=!0;try{const o=h(g(r,"blog"));(await w(o)).forEach(e=>{s.value.push({id:e.id,...e.data()})})}catch(o){console.log(o)}finally{a.value=!1}},getMyBlogPosts:async()=>{a.value=!0;try{const o=h(g(r,"blog"),v("user","==",d.currentUser.uid));(await w(o)).forEach(e=>{s.value.push({id:e.id,...e.data()})})}catch(o){console.log(o)}finally{a.value=!1}},leerBlogPost:async o=>{a.value=!0;try{const t=i(r,"blog",o),e=await f(t);if(!e.exists())throw new Error("doc no existe");if(e.data().user!==d.currentUser.uid)throw new Error("No es dueño del documento");return{titulo:e.data().titulo,detalle:e.data().detalle,image:e.data().image,date:e.data().date}}catch(t){console.log(t.message)}finally{a.value=!1}},updateBlogPost:async(o,t,e,l)=>{a.value=!0;try{const c=i(r,"blog",o),n=await f(c);if(!n.exists())throw new Error("no existe el doc");if(n.data().user===d.currentUser.uid)await m(c,{titulo:t,detalle:e,image:l}),s.value=s.value.map(u=>u.id===o?{...u,titulo:t,detalle:e,image:l}:u);else throw new Error("no eres el autor")}catch(c){console.log(c.message)}finally{a.value=!1}},addBlogPost:async(o,t,e="")=>{try{const l=P().toDate(),c=B.fromDate(l),n={titulo:o,detalle:t,image:e,user:d.currentUser.uid,date:c},u=await b(g(r,"blog"),n);s.value.push({...n,id:u.id})}catch(l){console.log(l)}},deleteBlogPost:async o=>{try{const t=i(r,"blog",o),e=await f(t);if(!e.exists())throw new Error("doc no existe");if(e.data().user!==d.currentUser.uid)throw new Error("No es dueño del documento");await D(i(r,"blog",o)),s.value=s.value.filter(l=>l.id!==o)}catch(t){console.log(t.message)}}}});export{M as u};
